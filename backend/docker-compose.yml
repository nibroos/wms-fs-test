version: "3.7"

services:
  proxy:
    container_name: proxy
    image: nginx:alpine
    ports:
      # - "80:80"
      - "${NGINX_PORT:-8081}:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    restart: "unless-stopped"
    networks:
      - backend

  server:
    container_name: server
    build:
      context: ./
      dockerfile: Dockerfile.dev
    ports:
      # - "3000:3000"
      - "${PORT:-3050}:3000"
    environment:
      PORT: "3000"
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-secret}
      DB_DATABASE: ${DB_DATABASE:-fstest-nibros}
      DB_HOST: ${DB_HOST:-postgres}
      DB_PORT: ${DB_PORT:-5435}
      DB_DIALECT: ${DB_DIALECT:-postgres}
      LOG_FORMAT: "dev"
      LOG_DIR: "../logs"
      ORIGIN: ${ORIGIN:-*}
      CREDENTIALS: ${CREDENTIALS:-true}
      NODE_ENV: ${NODE_ENV:-development}
      SECRET_KEY: ${SECRET_KEY:-secretKey}
      SESSIONS_LIFETIME: ${SESSIONS_LIFETIME:-10800}
    volumes:
      - ./:/app
      - /app/node_modules
    restart: "unless-stopped"
    networks:
      - backend
    links:
      - postgres
    depends_on:
      - postgres

  postgres:
    image: postgres:17.4-alpine
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secret}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_DB: ${DB_DATABASE:-fstest-nibros}
    networks:
      - backend
    ports:
      - "${DB_PORT:-5435}:5432"
    volumes:
      - postgres-wms:/var/lib/postgresql/data
    restart: on-failure

networks:
  backend:
    driver: bridge

volumes:
  postgres-wms:
    driver: local
  data:
    driver: local
